AWSTemplateFormatVersion: '2010-09-09'
Description: Confidant Deployment with EC2, Auto Scaling, and Application Load Balancer

Parameters:
  VPCId:
    Type: String
    Description: The ID of the VPC
  PublicSubnet1:
    Type: String
    Description: The ID of the first public subnet
  PublicSubnet2:
    Type: String
    Description: The ID of the second public subnet

Resources:
  ConfidantSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Confidant
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  ConfidantInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref ConfidantRole

  ConfidantRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ConfidantAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:ListTables
                  - kms:Decrypt
                Resource: "*"

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: ConfidantLaunchTemplate
      LaunchTemplateData:
        InstanceType: t2.micro
        ImageId: !Sub "{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2}}"
        SecurityGroupIds:
          - !Ref ConfidantSecurityGroup
        IamInstanceProfile:
          Name: !Ref ConfidantInstanceProfile
        UserData:
          Fn::Base64: |
            #!/bin/bash
            yum update -y
            yum install -y python3-pip git
            cd /opt
            git clone https://github.com/guirgsilva/confidant.git
            cd confidant
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            FLASK_APP=confidant.app flask run --host=0.0.0.0 --port=80

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: ConfidantALB
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups:
        - !Ref ConfidantSecurityGroup
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: ConfidantTG
      VpcId: !Ref VPCId
      Port: 80
      Protocol: HTTP
      TargetType: instance
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /health
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Matcher:
        HttpCode: 200

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      MinSize: '1'
      MaxSize: '3'
      DesiredCapacity: '1'
      HealthCheckType: ELB
      HealthCheckGracePeriod: 300
      TargetGroupARNs:
        - !Ref ALBTargetGroup

Outputs:
  ApplicationLoadBalancerName:
    Description: Name of the Application Load Balancer
    Value: !GetAtt ApplicationLoadBalancer.LoadBalancerName
    Export:
      Name: !Sub "${AWS::StackName}-ApplicationLoadBalancerName"
